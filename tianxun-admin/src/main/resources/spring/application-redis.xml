<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:cache="http://www.springframework.org/schema/cache" 
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.2.xsd  
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd"
	default-autowire="byName">

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.maxTotal}" />
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxWaitMillis" value="${redis.maxWait}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>

	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="poolConfig" ref="jedisPoolConfig" />
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
	</bean>

	<bean id="protoRedisSerializer" class="com.vteba.cache.redis.KryoRedisSerializer"></bean>

	<bean id="stringSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="defaultSerializer" ref="protoRedisSerializer" />
		<property name="keySerializer" ref="stringSerializer" />
		<property name="stringSerializer" ref="stringSerializer" />
		<property name="connectionFactory" ref="jedisConnectionFactory" />
	</bean>

	<bean id="redisService" class="com.vteba.cache.redis.RedisService">
		<property name="redisTemplate" ref="redisTemplate" />
	</bean>
	
	<!-- spring抽象缓存redis实现 -->
	<bean id="springRedisCache" class="com.vteba.cache.redis.spring.RedisCache">
		<property name="name" value="zjtOrgAdminStats"/>
		<property name="redisService" ref="redisService"/>
	</bean>

	<bean id="redisCacheManager" class="com.vteba.cache.redis.spring.RedisCacheManager">
		<property name="cacheList">
			<list>
				<ref bean="springRedisCache"/>
			</list>
		</property>
	</bean>
	
	<cache:annotation-driven cache-manager="redisCacheManager"/>
	
	<bean id="redisKeyGenerator" class="com.vteba.cache.redis.spring.RedisKeyGenerator"/>
</beans>