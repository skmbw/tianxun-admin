<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vteba.tianxun.question.dao.CategoryDao" >
  <resultMap id="categoryResultMap" type="com.vteba.tianxun.question.model.Category" >
    <!--
      WARNING - 结果集映射，不含Blob字段。
      MyBatis代码工具自动生成，不要修改！
    -->
    <id column="code" property="code" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="parent" property="parent" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - 该表所有字段。
      MyBatis代码工具自动生成，不要修改！
    -->
    code, name, state, level, parent
  </sql>
  <sql id="model_where_clause" >
    <!--
      WARNING - 根据model条件，查询或更新的where语句。
      MyBatis代码工具自动生成，不要修改！
    -->
    <where >
      <trim prefixOverrides="and" >
        <if test="name != null" >
          and name = #{name,jdbcType=VARCHAR}
        </if>
        <if test="state != null" >
          and state = #{state,jdbcType=INTEGER}
        </if>
        <if test="level != null" >
          and level = #{level,jdbcType=INTEGER}
        </if>
        <if test="parent != null" >
          and parent = #{parent,jdbcType=INTEGER}
        </if>
      </trim>
    </where>
    <if test="orderBy != null" >
      order by ${orderBy}
    </if>
    <if test="start != null" >
      limit ${start}, ${pageSize}
    </if>
  </sql>
  <sql id="update_model_where_clause" >
    <!--
      WARNING - 根据model条件，更新的where语句。
      MyBatis代码工具自动生成，不要修改！
    -->
    <where >
      <trim prefixOverrides="and" >
        <if test="params.name != null" >
          and name = #{params.name,jdbcType=VARCHAR}
        </if>
        <if test="params.state != null" >
          and state = #{params.state,jdbcType=INTEGER}
        </if>
        <if test="params.level != null" >
          and level = #{params.level,jdbcType=INTEGER}
        </if>
        <if test="params.parent != null" >
          and parent = #{params.parent,jdbcType=INTEGER}
        </if>
      </trim>
    </where>
  </sql>
  <select id="queryList" resultMap="categoryResultMap" parameterType="com.vteba.tianxun.question.model.Category" >
    <!--
      WARNING - 根据params所携带条件查询数据。
      MyBatis代码工具自动生成，不要修改！
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from category
    <if test="_parameter != null" >
      <include refid="model_where_clause" />
    </if>
  </select>
  <select id="pagedList" resultMap="categoryResultMap" parameterType="com.vteba.tianxun.question.model.Category" >
    <!--
      WARNING - 根据params所携带条件分页查询数据。
      MyBatis代码工具自动生成，不要修改！
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from category
    <if test="_parameter != null" >
      <include refid="model_where_clause" />
    </if>
  </select>
  <select id="get" resultMap="categoryResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - 根据主键查询数据。
      MyBatis代码工具自动生成，不要修改！
    -->
    select 
    <include refid="Base_Column_List" />
    from category
    where code = #{code,jdbcType=INTEGER}
  </select>
  <select id="getForUpdate" resultMap="categoryResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - 根据主键查询数据，使用 for update 悲观锁。
      MyBatis代码工具自动生成，不要修改！
    -->
    select 
    <include refid="Base_Column_List" />
    from category
    where code = #{code,jdbcType=INTEGER} for update
  </select>
  <select id="unique" resultMap="categoryResultMap" parameterType="com.vteba.tianxun.question.model.Category" >
    <!--
      WARNING - 根据params所携带条件查询唯一记录。
      MyBatis代码工具自动生成，不要修改！
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from category
    <if test="_parameter != null" >
      <include refid="model_where_clause" />
    </if>
  </select>
  <select id="uniqueForUpdate" resultMap="categoryResultMap" parameterType="com.vteba.tianxun.question.model.Category" >
    <!--
      WARNING - 根据params所携带条件查询唯一记录。
      MyBatis代码工具自动生成，不要修改！
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from category
    <if test="_parameter != null" >
      <include refid="model_where_clause" />
    </if>
     for update
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer" >
    <!--
      WARNING - 根据主键删除记录。
      MyBatis代码工具自动生成，不要修改！
    -->
    delete from category
    where code = #{code,jdbcType=INTEGER}
  </delete>
  <delete id="deleteBulks" parameterType="com.vteba.tianxun.question.model.Category" >
    <!--
      WARNING - 根据params所携带条件删除数据。
      MyBatis代码工具自动生成，不要修改！
    -->
    delete from category
    <if test="_parameter != null" >
      <include refid="model_where_clause" />
    </if>
  </delete>
  <insert id="save" parameterType="com.vteba.tianxun.question.model.Category" >
    <!--
      WARNING - 插入记录，只有非空字段才会插入到数据库。
      MyBatis代码工具自动生成，不要修改！
    -->
    insert into category
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="parent != null" >
        parent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        #{code,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="parent != null" >
        #{parent,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countBy" parameterType="com.vteba.tianxun.question.model.Category" resultType="java.lang.Integer" >
    <!--
      WARNING - 根据params所携带条件计数。
      MyBatis代码工具自动生成，不要修改！
    -->
    select count(*) from category
    <if test="_parameter != null" >
      <include refid="model_where_clause" />
    </if>
  </select>
  <update id="updateBulks" parameterType="map" >
    <!--
      WARNING - 根据params所携带条件更新指定字段。
      MyBatis代码工具自动生成，不要修改！
    -->
    update category
    <set >
      <if test="record.code != null" >
        code = #{record.code,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.parent != null" >
        parent = #{record.parent,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="update_model_where_clause" />
    </if>
  </update>
  <update id="updateById" parameterType="com.vteba.tianxun.question.model.Category" >
    <!--
      WARNING - 根据主键更新指定字段的数据。
      MyBatis代码工具自动生成，不要修改！
    -->
    update category
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="parent != null" >
        parent = #{parent,jdbcType=INTEGER},
      </if>
    </set>
    where code = #{code,jdbcType=INTEGER}
  </update>
</mapper>